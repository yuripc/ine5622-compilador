package controle.analisador;

/**
 * @author Fernando Taranto, Yuri Pereira
 * @since 24/06/2013
 */

public interface ParserConstants
{
	int START_SYMBOL = 57;

	int FIRST_NON_TERMINAL    = 57;
	int FIRST_SEMANTIC_ACTION = 90;

	int[][] PARSER_TABLE =
		{
			{ -1, -1, -1, -1, -1,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1,  1,  1, -1, -1, -1,  1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1,  2,  2, -1, -1, -1,  2,  2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  2, -1, -1,  3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  3, -1 },
			{ -1, -1, -1, -1, -1, -1, -1,  7,  8, -1, -1, -1,  4,  6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, 10, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 13, 12, -1, -1, -1, 13, -1, 13, -1, -1, -1, -1, -1, -1, 13, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15, -1, -1, -1, -1, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 16, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 17, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 18, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 20, -1, -1, -1, -1, -1, 19, -1, -1, -1, -1, -1, -1, -1, 20, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 21, -1, -1, -1, -1, -1, -1, 22, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 24, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 23, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 25, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 27, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 28, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 29 },
			{ -1, 30, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 32, -1, 37, 34, 35, -1, -1, -1, -1, -1, -1, -1, -1, -1, 33, -1, -1, -1, 36, -1, 37, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 31, 37 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 38, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 39, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 39 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 43, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 43, -1, -1, -1, -1, -1, 42, -1, 41, -1, -1, -1, -1, -1, -1, 40, -1, -1, -1, -1, 43 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 44, -1, -1, -1, -1, -1, 45, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, 46, 46, 46, 46, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 46, 46, 46, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 46, -1, -1, -1, -1, 46, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 48, 48, -1, -1, -1, -1, -1, -1, -1, -1, 48, -1, -1, -1, -1, -1, -1, -1, -1, 48, 48, -1, 47, 47, 47, -1, 48, -1, 48, -1, -1, -1, -1, -1, -1, 47, 47, 47, -1, 48 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 51, 50, 49, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 54, 53, 52, -1, -1 },
			{ -1, 55, 55, 55, 55, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 55, 55, 55, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 55, -1, -1, -1, -1, 55, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 57, 57, -1, -1, 56, -1, -1, -1, -1, -1, 57, -1, -1, -1, -1, -1, -1, -1, -1, 57, 57, -1, 57, 57, 57, -1, 57, -1, 57, 56, 56, -1, -1, -1, -1, 57, 57, 57, -1, 57 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 60, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 58, 59, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, 61, 61, 61, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 61, 61, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 61, -1, -1, -1, -1, 61, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 63, -1, -1, 63, 62, -1, -1, -1, -1, 63, -1, -1, -1, -1, -1, -1, -1, 62, 63, 63, -1, 63, 63, 63, -1, 63, -1, 63, 63, 63, 62, 62, -1, -1, 63, 63, 63, -1, 63 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 67, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 64, 65, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, 71, 72, 72, 72, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 68, 72, 72, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 70, -1, -1, -1, -1, 69, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 75, 75, -1, -1, 75, 75, -1, -1, -1, -1, 75, -1, -1, -1, -1, -1, -1, -1, 75, 75, 75, -1, 75, 75, 75, 73, 75, 74, 75, 75, 75, 75, 75, -1, -1, 75, 75, 75, -1, 75 },
			{ -1, 76, 77, 77, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 77, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
			{ -1, -1, 78, 79, 82, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 80, 81, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 }
		};

	int[][] PRODUCTIONS =
		{
			{  6,  2, 36, 58, 38 },
			{ 59, 65, 71 },
			{ 60, 61, 62, 64, 36, 59 },
			{  0 },
			{ 13 },
			{ 28 },
			{ 14 },
			{  8 },
			{  9, 44, 88, 45 },
			{ 44, 88, 45 },
			{  0 },
			{  2, 63 },
			{ 37, 62 },
			{  0 },
			{ 41, 88 },
			{  0 },
			{ 66, 36, 65 },
			{  0 },
			{ 31,  2, 67, 69, 36, 58 },
			{ 42, 70, 62, 50, 60, 68, 43 },
			{  0 },
			{ 36, 70, 62, 50, 60, 68 },
			{  0 },
			{ 50, 60 },
			{  0 },
			{ 32 },
			{ 33 },
			{ 55, 73, 72, 56 },
			{ 36, 73, 72 },
			{  0 },
			{  2, 75 },
			{ 71 },
			{ 16, 77, 17, 73, 74 },
			{ 30, 77, 27, 73 },
			{ 19, 42, 62, 43 },
			{ 20, 42, 77, 76, 43 },
			{ 34, 77 },
			{  0 },
			{ 18, 73 },
			{  0 },
			{ 51, 77 },
			{ 44, 77, 45, 51, 77 },
			{ 42, 77, 76, 43 },
			{  0 },
			{ 37, 77, 76 },
			{  0 },
			{ 80, 78 },
			{ 79, 80 },
			{  0 },
			{ 41 },
			{ 40 },
			{ 39 },
			{ 54 },
			{ 53 },
			{ 52 },
			{ 83, 81 },
			{ 82, 83, 81 },
			{  0 },
			{ 46 },
			{ 47 },
			{ 21 },
			{ 86, 84 },
			{ 85, 86, 84 },
			{  0 },
			{ 48 },
			{ 49 },
			{ 35 },
			{ 22 },
			{ 23, 86 },
			{ 47, 86 },
			{ 42, 77, 43 },
			{  2, 87 },
			{ 89 },
			{ 42, 77, 76, 43 },
			{ 44, 77, 45 },
			{  0 },
			{  2 },
			{ 89 },
			{  3 },
			{  4 },
			{ 24 },
			{ 25 },
			{  5 }
		};

	String[] PARSER_ERROR =
		{
			"",
			"Era esperado fim de programa",
			"Era esperado id",
			"Era esperado número inteiro",
			"Era esperado número real",
			"Era esperado literal",
			"Era esperado 'programa'",
			"Era esperado 'var'",
			"Era esperado 'caracter'",
			"Era esperado 'cadeia'",
			"Era esperado 'procedimento'",
			"Era esperado 'inicio'",
			"Era esperado 'fim'",
			"Era esperado 'inteiro'",
			"Era esperado 'booleano'",
			"Era esperado 'funcao'",
			"Era esperado 'se'",
			"Era esperado 'entao'",
			"Era esperado 'senao'",
			"Era esperado 'leia'",
			"Era esperado 'escreva'",
			"Era esperado 'ou'",
			"Era esperado 'e'",
			"Era esperado 'nao'",
			"Era esperado 'falso'",
			"Era esperado 'verdadeiro'",
			"Era esperado 'de'",
			"Era esperado 'faca'",
			"Era esperado 'real'",
			"Era esperado 'vetor'",
			"Era esperado 'enquanto'",
			"Era esperado 'metodo'",
			"Era esperado 'ref'",
			"Era esperado 'val'",
			"Era esperado 'retorne'",
			"Era esperado 'div'",
			"Era esperado ';'",
			"Era esperado ','",
			"Era esperado '.'",
			"Era esperado '>'",
			"Era esperado '<'",
			"Era esperado '='",
			"Era esperado '('",
			"Era esperado ')'",
			"Era esperado '['",
			"Era esperado ']'",
			"Era esperado '+'",
			"Era esperado '-'",
			"Era esperado '*'",
			"Era esperado '/'",
			"Era esperado ':'",
			"Era esperado ':='",
			"Era esperado '<>'",
			"Era esperado '<='",
			"Era esperado '>='",
			"Era esperado '{'",
			"Era esperado '}'",
			"Era esperado programa ou $",
			"Era esperado tipo, 'metodo', '{', ';' ou '.'",
			"Era esperado tipo, 'metodo' ou '{'",
			"Era esperado tipo, id, ';', ')' ou '['",
			"Era esperado '[' ou id",
			"Era esperado id, ';', '=', ')' ou ':'",
			"Era esperado ',', ';', '=', ')' ou ':'",
			"Era esperado '=' ou ';'",
			"Era esperado 'metodo' ou '{'",
			"Era esperado 'metodo' ou ';'",
			"Era esperado '(', ';' ou ':'",
			"Era esperado ';' ou ')'",
			"Era esperado ':' ou ';'",
			"Era esperado ref, val ou id",
			"Era esperado '{', 'senao', ';', '.' ou '}'",
			"Era esperado ';' ou '}'",
			"Erro na expressão",
			"Era esperado 'senao', ';' ou '}'",
			"Era esperado '(', '[', ':=', 'senao', ';' ou '}'",
			"Era esperado ',' ou ')'",
			"Erro na expressão",
			"Erro na expressão",
			"Erro na expressão",
			"Erro na expressão",
			"Erro na expressão",
			"Erro na expressão",
			"Erro na expressão",
			"Erro na expressão",
			"Erro na expressão",
			"Erro na expressão",
			"Erro na expressão",
			"Era esperado id, número, literal, valor booleano, ';' ou ']'",
			"Erro na expressão"

		};
}
